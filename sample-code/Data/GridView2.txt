@using System.Collections
@inherits ControlComponent
@inject HttpClient Http

<asp.FreeDataSource ID="CustomersSource" OnExecuteSelected="sender => this.customers"
                    OnExecuteUpdated="this.CustomersSource_ExecuteUpdated"
                    OnExecuteDeleted="this.CustomersSource_ExecuteDeleted" />

<asp.GridView DataSourceID="CustomersSource"
              AutoGenerateColumns="false"
              EmptyDataText="No data available."
              AllowPaging="true"
              DataKeyNames="CustomerID">
    <Columns>
        <asp.CommandField ShowDeleteButton="true"
                          ShowEditButton="true" />
        <asp.BoundField DataField="CustomerID" HeaderText="CustomerID"
                        InsertVisible="false" ReadOnly="true" SortExpression="CustomerID" />
        <asp.BoundField DataField="CompanyName" HeaderText="CompanyName"
                        SortExpression="CompanyName" />
        <asp.BoundField DataField="ContactName" HeaderText="ContactName"
                        SortExpression="ContactName" />
        <asp.BoundField DataField="JobTitle" HeaderText="JobTitle"
                        SortExpression="JobTitle" />
        <asp.BoundField DataField="Phone" HeaderText="Phone"
                        SortExpression="Phone" />
        <asp.BoundField DataField="Fax" HeaderText="Fax"
                        SortExpression="Fax" />
    </Columns>
</asp.GridView>

@code {
    private Customer[] customers;

    protected override async Task OnInitializedAsync()
    {
        customers = await Http.GetFromJsonAsync<Customer[]>("sample-data/customers.json");
    }

    protected void CustomersSource_ExecuteUpdated(object sender, IDictionary keys, IDictionary values, IDictionary oldValues)
    {
        // Update record.
        customers.Where(a => a.CustomerID == (int)keys["CustomerID"]).Apply(a => values);
    }

    protected void CustomersSource_ExecuteDeleted(object sender, IDictionary keys, IDictionary oldValues)
    {
        // Delete record.
        customers = customers.Where(a => a.CustomerID != (int)keys["CustomerID"]).ToArray();
    }

    public class Customer
    {
        public int CustomerID { get; set; }

        public string CompanyName { get; set; }

        public string ContactName { get; set; }

        public string JobTitle { get; set; }

        public string City { get; set; }

        public string Address { get; set; }

        public string CountryRegion { get; set; }

        public string Phone { get; set; }

        public string Fax { get; set; }
    }
}
